[
{
    "Album": {
        "table_desc": "Stores album data with unique ID, title, and links to artist via artist ID.",
        "cols": [
            {
                "col": "AlbumId",
                "col_desc": "Primary key, unique identifier for the album."
            },
            {
                "col": "Title",
                "col_desc": "Title of the album."
            },
            {
                "col": "ArtistId",
                "col_desc": "Foreign key that references the artist of the album."
            }
        ],
        "table_summary": "이 테이블은 음악 앨범 정보를 저장하는 데이터베이스 테이블입니다.\n\n구조:\n- AlbumId: 각 앨범을 고유하게 식별하는 기본 키\n- Title: 앨범의 제목\n- ArtistId: 앨범을 제작한 아티스트를 참조하는 외래 키\n\n데이터 특성:\n- 각 앨범은 하나의 아티스트와 연결됨\n- 앨범 제목과 고유 식별자를 포함\n- Artist 테이블과 ArtistId를 통해 연결되어 있음\n- Track 테이블과 연결되어 각 앨범에 포함된 곡들의 정보를 확인 가능\n\n활용 사례:\n1. 음악 카탈로그 관리\n   - 특정 아티스트의 전체 앨범 목록 조회\n   - 앨범별 수록곡 수 파악\n   - 앨범 제목 검색 및 조회\n\n2. 데이터 분석\n   - 아티스트별 앨범 발매 수 분석\n   - 앨범당 평균 수록곡 수 계산\n   - 아티스트의 음반 제작 활동 추적\n\n3. 음악 라이브러리 관리\n   - 앨범 정보 조회 및 업데이트\n   - 앨범과 아티스트 정보의 연계\n   - 음악 컬렉션 체계화\n\n4. 리포트 생성\n   - 아티스트별 디스코그래피 작성\n   - 앨범 카탈로그 목록 생성\n   - 앨범 정보 요약 보고서 작성"
    }
},
{
    "Artist": {
        "table_desc": "Holds artist information with an ID and name.",
        "cols": [
            {
                "col": "ArtistId",
                "col_desc": "Primary key, unique identifier for the artist."
            },
            {
                "col": "Name",
                "col_desc": "Name of the artist."
            }
        ],
        "table_summary": "Artist 테이블은 아티스트 관련 기본 정보를 저장하는 테이블입니다. 다음과 같은 정보를 포함합니다:\n\n1. 구조:\n- ArtistId: 각 아티스트를 구분하는 고유 식별자\n- Name: 아티스트의 이름\n\n2. 데이터 특성:\n- 각 아티스트는 고유한 ID를 가지며, 이는 다른 테이블과의 관계 설정에 사용됨\n- 아티스트의 기본적인 식별 정보를 저장\n\n3. 활용 가능한 분석 및 용도:\n- 음악 카탈로그 관리\n- 아티스트별 앨범 및 곡 목록 조회\n- 아티스트 이름 기반 검색 기능 구현\n- 아티스트 데이터베이스 구축 및 관리\n- 음악 라이브러리 조직화\n- 아티스트별 콘텐츠 분류\n- 다른 음악 관련 테이블과 연계하여 아티스트 관련 상세 정보 조회\n- 아티스트 프로필 관리 시스템 구축\n- 음악 플랫폼의 아티스트 디렉토리 구성\n\n4. 가능한 분석 질문들:\n- 특정 아티스트의 존재 여부 확인\n- 전체 아티스트 수 파악\n- 아티스트 이름 기준 정렬 및 분류\n- 특정 이름 패턴을 가진 아티스트 검색\n- 아티스트 ID를 통한 관련 음악 작품 조회"
    }
},
{
    "Customer": {
        "table_desc": "Contains customer details and links to their support representative.",
        "cols": [
            {
                "col": "CustomerId",
                "col_desc": "Primary key, unique customer identifier."
            },
            {
                "col": "FirstName",
                "col_desc": "First name of the customer."
            },
            {
                "col": "LastName",
                "col_desc": "Last name of the customer."
            },
            {
                "col": "Company",
                "col_desc": "Company of the customer."
            },
            {
                "col": "Address",
                "col_desc": "Address of the customer."
            },
            {
                "col": "City",
                "col_desc": "City of the customer."
            },
            {
                "col": "State",
                "col_desc": "State of the customer."
            },
            {
                "col": "Country",
                "col_desc": "Country of the customer."
            },
            {
                "col": "PostalCode",
                "col_desc": "Postal code of the customer."
            },
            {
                "col": "Phone",
                "col_desc": "Phone number of the customer."
            },
            {
                "col": "Fax",
                "col_desc": "Fax number of the customer."
            },
            {
                "col": "Email",
                "col_desc": "Email address of the customer."
            },
            {
                "col": "SupportRepId",
                "col_desc": "Foreign key that references the employee who supports this customer."
            }
        ],
        "table_summary": "이 테이블은 고객 관련 정보를 저장하는 데이터베이스 테이블입니다. 다음과 같은 정보들을 포함하고 있습니다:\n\n기본 정보:\n- 고객 식별자 (CustomerId)\n- 고객의 이름 (FirstName, LastName)\n- 회사명 (Company)\n\n연락처 정보:\n- 주소 (Address)\n- 도시 (City)\n- 주/도 (State)\n- 국가 (Country)\n- 우편번호 (PostalCode)\n- 전화번호 (Phone)\n- 팩스번호 (Fax)\n- 이메일 주소 (Email)\n\n관리 정보:\n- 담당 지원 직원 ID (SupportRepId)\n\n이 테이블의 활용 사례:\n1. 고객 분석\n- 지역별 고객 분포 분석\n- 기업 고객과 개인 고객 비율 파악\n- 국가별/지역별 고객 세분화\n\n2. 마케팅 활용\n- 지역 타겟팅 마케팅 캠페인 설계\n- 이메일 마케팅을 위한 연락처 데이터베이스 활용\n- 지역별 맞춤형 프로모션 기획\n\n3. 고객 서비스\n- 고객 지원 담당자 배정 및 관리\n- 고객 연락처 정보 관리\n- 고객 커뮤니케이션 채널 관리\n\n4. 비즈니스 운영\n- 고객 기반 확장 전략 수립\n- 신규 시장 진출 시 기존 고객 데이터 분석\n- 고객 서비스 품질 모니터링 및 개선"
    }
},
{
    "Employee": {
        "table_desc": "Stores employee details, including their supervisory chain.",
        "cols": [
            {
                "col": "EmployeeId",
                "col_desc": "Primary key, unique identifier for the employee."
            },
            {
                "col": "LastName",
                "col_desc": "Last name of the employee."
            },
            {
                "col": "FirstName",
                "col_desc": "First name of the employee."
            },
            {
                "col": "Title",
                "col_desc": "Job title of the employee."
            },
            {
                "col": "ReportsTo",
                "col_desc": "Foreign key that references the supervisor of the employee."
            },
            {
                "col": "BirthDate",
                "col_desc": "Birth date of the employee."
            },
            {
                "col": "HireDate",
                "col_desc": "Hire date of the employee."
            },
            {
                "col": "Address",
                "col_desc": "Address of the employee."
            },
            {
                "col": "City",
                "col_desc": "City of the employee."
            },
            {
                "col": "State",
                "col_desc": "State of the employee."
            },
            {
                "col": "Country",
                "col_desc": "Country of the employee."
            },
            {
                "col": "PostalCode",
                "col_desc": "Postal code of the employee."
            },
            {
                "col": "Phone",
                "col_desc": "Phone number of the employee."
            },
            {
                "col": "Fax",
                "col_desc": "Fax number of the employee."
            },
            {
                "col": "Email",
                "col_desc": "Email address of the employee."
            }
        ],
        "table_summary": "이 테이블은 직원 정보를 저장하는 Employee 테이블로, 직원들의 개인정보와 업무 관련 정보를 포함하고 있습니다.\n\n저장되는 정보:\n- 기본 식별 정보: 직원 ID(EmployeeId)\n- 개인 정보: 성(LastName), 이름(FirstName), 생년월일(BirthDate)\n- 직무 관련 정보: 직책(Title), 상사 정보(ReportsTo), 입사일(HireDate)\n- 연락처 정보: 주소(Address), 도시(City), 주(State), 국가(Country), 우편번호(PostalCode), 전화번호(Phone), 팩스번호(Fax), 이메일(Email)\n\n활용 가능한 분석:\n1. 조직 구조 분석\n   - 보고 체계 및 조직도 구성\n   - 부서별 인원 구성 현황\n\n2. 인력 현황 분석\n   - 직급별 인원 분포\n   - 지역별 인원 분포\n   - 근속 연수 분석\n   - 연령대별 분포\n\n3. 인사 관리\n   - 직원 연락처 및 주소 관리\n   - 입사일 기반 근속 기간 계산\n   - 직원 생일 관리\n\n4. 지리적 분석\n   - 국가/도시별 직원 분포\n   - 지역별 인력 운영 현황\n\n5. 조직 효율성 분석\n   - 관리자당 부하 직원 수 분석\n   - 조직 계층 구조 분석\n\n이 테이블을 통해 인사 관리, 조직 구조 최적화, 인력 계획 수립 등에 필요한 기초 데이터를 확보할 수 있습니다."
    }
},
{
    "Genre": {
        "table_desc": "Catalogs music genres with a unique identifier and name.",
        "cols": [
            {
                "col": "GenreId",
                "col_desc": "Primary key, unique identifier for the genre."
            },
            {
                "col": "Name",
                "col_desc": "Name of the genre."
            }
        ],
        "table_summary": "이 테이블은 음악 장르 정보를 저장하는 데이터베이스 테이블입니다.\n\n구조:\n- GenreId: 각 장르를 고유하게 식별하는 기본 키\n- Name: 장르의 이름을 저장하는 필드\n\n데이터 특성:\n- 음악의 다양한 장르 분류 정보를 포함\n- 각 장르는 고유한 ID로 구분됨\n- 장르명을 텍스트로 저장\n\n활용 가능한 분석 및 용도:\n1. 음악 카탈로그 관리\n   - 장르별 음악 분류 및 정리\n   - 장르 기반 음악 검색 시스템 구축\n\n2. 음악 콘텐츠 분석\n   - 장르별 음악 보유 현황 파악\n   - 장르 분포도 분석\n\n3. 음악 서비스 운영\n   - 장르별 플레이리스트 생성\n   - 장르 기반 음악 추천 시스템 구현\n\n4. 음악 트렌드 분석\n   - 장르별 인기도 추적\n   - 시기별 장르 트렌드 변화 분석\n\n5. 음악 라이브러리 관리\n   - 장르별 음악 자산 관리\n   - 장르 기반 카테고리 구성"
    }
},
{
    "Invoice": {
        "table_desc": "Records details of transactions, linked to customers.",
        "cols": [
            {
                "col": "InvoiceId",
                "col_desc": "Primary key, unique identifier for the invoice."
            },
            {
                "col": "CustomerId",
                "col_desc": "Foreign key that references the customer associated with this invoice."
            },
            {
                "col": "InvoiceDate",
                "col_desc": "Date when the invoice was issued."
            },
            {
                "col": "BillingAddress",
                "col_desc": "Billing address on the invoice."
            },
            {
                "col": "BillingCity",
                "col_desc": "Billing city on the invoice."
            },
            {
                "col": "BillingState",
                "col_desc": "Billing state on the invoice."
            },
            {
                "col": "BillingCountry",
                "col_desc": "Billing country on the invoice."
            },
            {
                "col": "BillingPostalCode",
                "col_desc": "Billing postal code on the invoice."
            },
            {
                "col": "Total",
                "col_desc": "Total amount of the invoice."
            }
        ],
        "table_summary": "이 테이블은 거래 송장(Invoice) 정보를 저장하는 데이터베이스 테이블입니다.\n\n포함된 데이터:\n- 송장 고유 식별자 (InvoiceId)\n- 고객 식별자 (CustomerId)\n- 송장 발행 날짜 (InvoiceDate)\n- 청구 주소 관련 정보 (주소, 도시, 주/도, 국가, 우편번호)\n- 송장 총액 (Total)\n\n주요 활용 사례:\n1. 매출 분석\n   - 기간별 매출 추이 분석\n   - 지역별 매출 현황 파악\n   - 계절성 매출 패턴 분석\n\n2. 고객 분석\n   - 고객별 구매 금액 및 빈도 분석\n   - VIP 고객 식별\n   - 고객 지역 분포 분석\n\n3. 지역 기반 분석\n   - 국가/도시별 매출 현황\n   - 지역별 고객 분포\n   - 신규 시장 진출 기회 탐색\n\n4. 재무 관리\n   - 매출 집계 및 예측\n   - 현금 흐름 분석\n   - 청구 및 수금 관리\n\n5. 비즈니스 의사결정 지원\n   - 영업 전략 수립\n   - 지역별 마케팅 캠페인 기획\n   - 고객 세그먼테이션"
    }
},
{
    "InvoiceLine": {
        "table_desc": "Details each line item on an invoice, linked to tracks and invoices.",
        "cols": [
            {
                "col": "InvoiceLineId",
                "col_desc": "Primary key, unique identifier for the invoice line."
            },
            {
                "col": "InvoiceId",
                "col_desc": "Foreign key that references the associated invoice."
            },
            {
                "col": "TrackId",
                "col_desc": "Foreign key that references the track sold in this invoice line."
            },
            {
                "col": "UnitPrice",
                "col_desc": "Price per unit of the track."
            },
            {
                "col": "Quantity",
                "col_desc": "Quantity of the track sold in this invoice line."
            }
        ],
        "table_summary": "이 테이블은 음악 트랙 판매와 관련된 청구서 세부 내역을 저장하는 테이블입니다.\n\n구조:\n- 각 청구서 라인 항목은 고유 식별자(InvoiceLineId)로 구분됩니다.\n- 청구서 번호(InvoiceId)와 트랙 ID(TrackId)를 통해 관련 청구서와 판매된 트랙을 참조합니다.\n- 각 트랙의 단가(UnitPrice)와 판매 수량(Quantity)이 기록됩니다.\n\n활용 가능성:\n1. 매출 분석\n   - 트랙별 총 판매액 계산\n   - 판매량이 많은 트랙 식별\n   - 시간대별 매출 트렌드 분석\n\n2. 가격 분석\n   - 트랙별 가격 분포 조사\n   - 가격대별 판매량 분석\n   - 가격 변동에 따른 판매량 변화 추적\n\n3. 재고 관리\n   - 트랙별 판매 수량 모니터링\n   - 인기 트랙 파악\n   - 판매 패턴 분석\n\n4. 청구서 관리\n   - 청구서별 총액 계산\n   - 청구서 항목 상세 조회\n   - 거래 내역 추적\n\n5. 수익성 분석\n   - 트랙별 수익 계산\n   - 고수익 트랙 식별\n   - 판매 실적 평가"
    }
},
{
    "MediaType": {
        "table_desc": "Defines types of media for tracks.",
        "cols": [
            {
                "col": "MediaTypeId",
                "col_desc": "Primary key, unique identifier for the media type."
            },
            {
                "col": "Name",
                "col_desc": "Name of the media type."
            }
        ],
        "table_summary": "이 테이블은 트랙(음원)의 미디어 유형을 정의하는 데이터를 포함하고 있습니다.\n\n테이블의 구조:\n- MediaTypeId: 각 미디어 유형을 구별하는 고유 식별자\n- Name: 미디어 유형의 이름\n\n이 테이블의 활용 사례:\n1. 음원 카탈로그 관리\n   - 보유 중인 미디어 유형 분류 및 관리\n   - 각 미디어 포맷별 트랙 수 분석\n\n2. 미디어 형식 분석\n   - 시스템에서 지원하는 미디어 형식 파악\n   - 미디어 유형별 통계 생성\n\n3. 데이터 필터링\n   - 특정 미디어 유형의 트랙만 검색\n   - 미디어 유형별 트랙 그룹화\n\n4. 시스템 호환성 관리\n   - 지원 가능한 미디어 형식 확인\n   - 새로운 미디어 형식 추가 시 참조\n\n5. 인벤토리 관리\n   - 미디어 유형별 자산 관리\n   - 미디어 형식 표준화"
    }
},
{
    "Playlist": {
        "table_desc": "Organizes tracks into playlists.",
        "cols": [
            {
                "col": "PlaylistId",
                "col_desc": "Primary key, unique identifier for the playlist."
            },
            {
                "col": "Name",
                "col_desc": "Name of the playlist."
            }
        ],
        "table_summary": "이 테이블은 플레이리스트 정보를 저장하는 테이블입니다.\n\n테이블 구조:\n- PlaylistId: 각 플레이리스트를 구별하는 고유 식별자\n- Name: 플레이리스트의 이름\n\n이 테이블의 활용 사례:\n1. 플레이리스트 관리\n   - 시스템 내 모든 플레이리스트 목록 조회\n   - 특정 이름의 플레이리스트 검색\n   - 새로운 플레이리스트 생성 및 기존 플레이리스트 수정/삭제\n\n2. 데이터 분석\n   - 플레이리스트 수 집계\n   - 플레이리스트 이름 패턴 분석\n   - 가장 일반적인 플레이리스트 이름 분석\n\n3. 시스템 기능\n   - 플레이리스트 정렬 및 필터링\n   - 플레이리스트 검색 기능 구현\n   - 플레이리스트 중복 확인\n\n이 테이블은 다른 테이블과 연계하여 플레이리스트에 포함된 곡들의 정보를 관리하는 데 사용될 수 있습니다."
    }
},
{
    "PlaylistTrack": {
        "table_desc": "Links tracks to playlists.",
        "cols": [
            {
                "col": "PlaylistId",
                "col_desc": "Foreign key that identifies the playlist."
            },
            {
                "col": "TrackId",
                "col_desc": "Foreign key that identifies the track on the playlist."
            }
        ],
        "table_summary": "이 테이블은 플레이리스트와 트랙 간의 연결 관계를 저장하는 매핑 테이블입니다. PlaylistId와 TrackId 두 개의 외래 키를 통해 각 플레이리스트에 포함된 트랙들을 정의합니다.\n\n이 테이블을 통해 다음과 같은 데이터 분석과 조회가 가능합니다:\n\n1. 특정 플레이리스트에 포함된 모든 트랙 목록 조회\n2. 특정 트랙이 포함된 모든 플레이리스트 확인\n3. 플레이리스트별 수록곡 수 계산\n4. 여러 플레이리스트에 공통적으로 포함된 트랙 파악\n5. 가장 많은 플레이리스트에 포함된 인기 트랙 분석\n6. 플레이리스트 간의 트랙 중복도 분석\n7. 플레이리스트 구성의 유사도 측정\n8. 트랙의 플레이리스트 포함 빈도 분석\n\n이러한 데이터는 음악 스트리밍 서비스나 음악 라이브러리 관리 시스템에서 플레이리스트 기능을 구현하는데 필요한 기본적인 관계 정보를 제공합니다."
    }
},
{
    "Track": {
        "table_desc": "Stores detailed information about music tracks, linked to albums, genres, and media types.",
        "cols": [
            {
                "col": "TrackId",
                "col_desc": "Primary key, unique identifier for the track."
            },
            {
                "col": "Name",
                "col_desc": "Name of the track."
            },
            {
                "col": "AlbumId",
                "col_desc": "Foreign key that references the album containing this track."
            },
            {
                "col": "MediaTypeId",
                "col_desc": "Foreign key that references the type of media for this track."
            },
            {
                "col": "GenreId",
                "col_desc": "Optional foreign key that references the genre of this track."
            },
            {
                "col": "Composer",
                "col_desc": "Composer of the track."
            },
            {
                "col": "Milliseconds",
                "col_desc": "Duration of the track in milliseconds."
            },
            {
                "col": "Bytes",
                "col_desc": "Size of the track file in bytes."
            },
            {
                "col": "UnitPrice",
                "col_desc": "Price per unit of this track."
            }
        ],
        "table_summary": "Track 테이블은 음악 트랙에 대한 상세 정보를 저장하는 테이블입니다. 다음과 같은 정보들을 포함하고 있습니다:\n\n기본 정보:\n- 트랙 고유 식별자 (TrackId)\n- 트랙 이름 (Name)\n- 작곡가 정보 (Composer)\n\n관계 정보:\n- 앨범 연결 정보 (AlbumId)\n- 미디어 타입 연결 정보 (MediaTypeId)\n- 장르 연결 정보 (GenreId)\n\n기술적 정보:\n- 재생 시간 (Milliseconds)\n- 파일 크기 (Bytes)\n- 단위 가격 (UnitPrice)\n\n이 테이블은 다음과 같은 분석과 활용이 가능합니다:\n\n1. 음원 관리:\n- 장르별 트랙 분포 분석\n- 앨범별 수록곡 관리\n- 미디어 타입별 트랙 분류\n\n2. 비즈니스 분석:\n- 트랙별 가격 정책 수립\n- 장르별 평균 가격 분석\n- 앨범별 수익성 분석\n\n3. 기술적 분석:\n- 스토리지 용량 계획\n- 재생 시간 기반 콘텐츠 분류\n- 파일 크기 분석을 통한 스트리밍 서비스 최적화\n\n4. 콘텐츠 큐레이션:\n- 재생 시간별 트랙 분류\n- 작곡가별 작품 목록 생성\n- 장르별 트랙 필터링"
    }
}
]